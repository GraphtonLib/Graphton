schema {
  query: Query
  mutation: Mutation
}

enum Role {
  ADMIN
  USER
  GUEST
}

type User {
  id: ID!
  name: String!
  age: Int
  role: Role!
  posts: [Post!]!
  friends: [User!]!
}

type Post {
  id: ID!
  author: User!
  text: String!
  relatedPosts: [Post!]!
}

input UserInput {
  column: String!
  order: SortOrder!
}

enum SortOrder {
  ASC
  DESC
}

type Query {
  users: [User!]!
  usersOrdered(orderBy: [UserInput!]): [User!]!
  user(id: ID!): User
  userExists(id: ID!): Boolean!
}

type Mutation {
  createUser(name: String!, age: Int): User!
  updateUser(id: ID!, name: String, age: Int): User!
  deleteUser(id: ID!): User!
}
